{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\KJura\\\\OneDrive\\\\Desktop\\\\react\\\\personal-web-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\KJura\\\\OneDrive\\\\Desktop\\\\react\\\\personal-web-app\\\\src\\\\components\\\\NavBar.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { debounce } from \"./Helpers\";\n\nfunction NavBar() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevScrollPos = _useState4[0],\n      setPrevScrollPos = _useState4[1];\n\n  var _useState5 = useState(\"nav-area-not-animated\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currntClassNme = _useState6[0],\n      setCurrntClassNme = _useState6[1];\n\n  var handleScroll = (function () {\n    //find current scroll position\n    var currentScrollPos = window.pageYOffset;\n    console.log(currentScrollPos); // set state based on location info(explained in more detail below)\n\n    setShow(prevScrollPos > currentScrollPos && prevScrollPos - currentScrollPos > 70 || currentScrollPos < 10);\n    setPrevScrollPos(currentScrollPos);\n  }, 100); // new useEffect\n\n  useEffect(function () {\n    window.addEventListener('scroll'.handleScroll);\n    return function () {\n      return window.removeEventListener('scroll', handleScroll);\n    };\n  }, [prevScrollPos, show, handleScroll]);\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    class: \"nav - area - animated\",\n    style: {\n      top: show ? '0px' : '-110px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    class: \"nav-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    class: \"nav-lst\",\n    href: \"#header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    class: \"nav-lst\",\n    href: \"#about-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"About\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    class: \"nav-lst\",\n    href: \"#technical-skills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Skills\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    class: \"nav-lst\",\n    href: \"#contact-me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Contact\"))));\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/KJura/OneDrive/Desktop/react/personal-web-app/src/components/NavBar.jsx"],"names":["React","useState","useEffect","debounce","NavBar","show","setShow","prevScrollPos","setPrevScrollPos","currntClassNme","setCurrntClassNme","handleScroll","currentScrollPos","window","pageYOffset","console","log","addEventListener","removeEventListener","top"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,SAASC,MAAT,GAAkB;AAAA,kBAEUH,QAAQ,CAAC,IAAD,CAFlB;AAAA;AAAA,MAEPI,IAFO;AAAA,MAEDC,OAFC;;AAAA,mBAG4BL,QAAQ,CAAC,CAAD,CAHpC;AAAA;AAAA,MAGPM,aAHO;AAAA,MAGQC,gBAHR;;AAAA,mBAI8BP,QAAQ,CAAC,uBAAD,CAJtC;AAAA;AAAA,MAIPQ,cAJO;AAAA,MAISC,iBAJT;;AAMd,MAAMC,YAAY,IAAI,YAAM;AACxB;AACA,QAAMC,gBAAgB,GAAGC,MAAM,CAACC,WAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ,EAHwB,CAIxB;;AACAN,IAAAA,OAAO,CAAEC,aAAa,GAAGK,gBAAhB,IAAoCL,aAAa,GAAGK,gBAAhB,GAAmC,EAAxE,IAA+EA,gBAAgB,GAAG,EAAnG,CAAP;AAEAJ,IAAAA,gBAAgB,CAACI,gBAAD,CAAhB;AACH,GARqB,EAQnB,GARe,CAAlB,CANc,CAgBd;;AACAV,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,MAAM,CAACI,gBAAP,CAAwB,SAASN,YAAjC;AACA,WAAO;AAAA,aAAME,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCP,YAArC,CAAN;AAAA,KAAP;AACH,GAHQ,EAGN,CAACJ,aAAD,EAAgBF,IAAhB,EAAsBM,YAAtB,CAHM,CAAT;AAKA,sBACI;AAAK,IAAA,KAAK,EAAC,uBAAX;AAAmC,IAAA,KAAK,EAAE;AAAEQ,MAAAA,GAAG,EAAEd,IAAI,GAAG,KAAH,GAAW;AAAtB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,KAAK,EAAC,SAAT;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,KAAK,EAAC,SAAT;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,KAAK,EAAC,SAAT;AAAmB,IAAA,IAAI,EAAC,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,CAHJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAG,IAAA,KAAK,EAAC,SAAT;AAAmB,IAAA,IAAI,EAAC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAJ,CALJ,CADJ,CADJ;AAWH;;AAED,eAAeD,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { debounce } from \"./Helpers\";\r\n\r\nfunction NavBar() {\r\n\r\n    const [show, setShow] = useState(true);\r\n    const [prevScrollPos, setPrevScrollPos] = useState(0);\r\n    const [currntClassNme, setCurrntClassNme] = useState(\"nav-area-not-animated\");\r\n\r\n    const handleScroll = (() => {\r\n        //find current scroll position\r\n        const currentScrollPos = window.pageYOffset;\r\n        console.log(currentScrollPos);\r\n        // set state based on location info(explained in more detail below)\r\n        setShow((prevScrollPos > currentScrollPos && prevScrollPos - currentScrollPos > 70) || currentScrollPos < 10);\r\n\r\n        setPrevScrollPos(currentScrollPos);\r\n    }, 100);\r\n\r\n    // new useEffect\r\n    useEffect(() => {\r\n        window.addEventListener('scroll'.handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, [prevScrollPos, show, handleScroll]);\r\n\r\n    return (\r\n        <nav class=\"nav - area - animated\" style={{ top: show ? '0px' : '-110px' }}>\r\n            <ul class=\"nav-links\">\r\n                <li><a class=\"nav-lst\" href=\"#header\">Home</a></li>\r\n                <li><a class=\"nav-lst\" href=\"#about-me\">About</a></li>\r\n                <li><a class=\"nav-lst\" href=\"#technical-skills\">Skills</a></li>\r\n                {/* <li><a class=\"nav-lst\" href=\"#project-section\">Portfolio</a></li> */}\r\n                <li><a class=\"nav-lst\" href=\"#contact-me\">Contact</a></li>\r\n            </ul>\r\n        </nav >\r\n    )\r\n}\r\n\r\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}